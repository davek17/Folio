<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">

    <BooleanToVisibilityConverter x:Key="boolToVisibilityConverter" />

    <SolidColorBrush Color="SlateGray" x:Key="ForegroundBrush" />
    <SolidColorBrush Color="White" x:Key="BackgroundBrush" />
    <SolidColorBrush Color="LightSlateGray" x:Key="ForegroundBrushLight" />
    <SolidColorBrush Color="#616161" x:Key="LighterSliderBrush" />
    <SolidColorBrush Color="#FF3B3B3B" x:Key="LightSliderBrush" />
    <SolidColorBrush Color="Transparent" x:Key="SliderBrush" />
    <SolidColorBrush Color="#FFDBD6F3" Opacity="0.5" x:Key="DataGridOpacityBackground" />

    <LinearGradientBrush x:Key="MenuBackground" StartPoint="0, 0.5" EndPoint="1, 0.5">
        <GradientStop Color="White"  Offset="0" />
        <GradientStop Color="#523eae"  Offset="0.75" />
        <GradientStop Color="White"  Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="GradientBackgroundLeftRight" StartPoint="0,0.5" EndPoint="1,0.5" >
        <GradientStop Color="White" Offset="0" />
        <GradientStop Color="White" Offset="0.5" />
        <GradientStop Color="#FFDBD6F3" Offset="0.85" />
        <GradientStop Color="White" Offset="0.95" />
        <LinearGradientBrush.Transform>
            <RotateTransform CenterX="00" CenterY="00" Angle="30" />
        </LinearGradientBrush.Transform>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="GradientForegroundLeftRight" StartPoint="0,0.5" EndPoint="1,0.5" >
        <GradientStop Color="#523eae" Offset="0" />
        <GradientStop Color="#523eae" Offset="0.8" />
        <GradientStop Color="White" Offset="0.9" />
        <GradientStop Color="#523eae" Offset="0.95" />
    </LinearGradientBrush>

    <Style x:Key="baseFont" TargetType="{x:Type Control}">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="12" />
    </Style>

    <Style x:Key="baseControlStyle" TargetType="{x:Type Control}" BasedOn="{StaticResource baseFont}">
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
    </Style>

    <Style x:Key="menuBar" TargetType="{x:Type Menu}" BasedOn="{StaticResource baseFont}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border BorderBrush="{StaticResource ForegroundBrushLight}" Background="{DynamicResource {x:Static SystemColors.MenuBrushKey}}" BorderThickness="0" Padding="2,2,2,2" >
                        <ItemsPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="menuBarItem" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource baseFont}">
        <Setter Property="Command" Value="{Binding OnSelected}" />
        <Setter Property="IsCheckable" Value="{Binding IsCheckable}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.MenuBrushKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="Margin" Value="0,0,10,0" />
    </Style>

    <Style TargetType="{x:Type MenuItem}" x:Key="menuSeparatorStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate 
                  TargetType="{x:Type MenuItem}">
                    <Separator HorizontalAlignment="Stretch" Margin="30, 2, 2, 2" IsEnabled="false" Background="LightGray" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="statusBar" TargetType="{x:Type StatusBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type StatusBar}">
                    <Border BorderBrush="Gray" BorderThickness="1" Background="{StaticResource ForegroundBrushLight}">
                        <DockPanel LastChildFill="True">
                            <ItemsPresenter />
                        </DockPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="statusBarItem" TargetType="{x:Type StatusBarItem}" BasedOn="{StaticResource baseFont}">
        <Setter Property="Padding" Value="10, 5, 10, 5" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FontWeight" Value="SemiBold" />
    </Style>

    <Style x:Key="headerLabel" TargetType="{x:Type Label}" BasedOn="{StaticResource baseControlStyle}">
        <Setter Property="Margin" Value="0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Background" Value="{DynamicResource ForegroundBrushLight}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="BorderThickness" Value="0,0,0,0.5" />
        <Setter Property="BorderBrush" Value="{StaticResource ForegroundBrush}" />
    </Style>

    <Style x:Key="ToolBarStackPanel" TargetType="{x:Type StackPanel}">
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.MenuBarBrushKey}}" />
        <Setter Property="Height" Value="30" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
    </Style>

    <Style x:Key="ToolBarTextBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource baseControlStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border Name="border" Background="{DynamicResource BackgroundBrush}" Margin="5,1"
                                BorderThickness="1" BorderBrush="{DynamicResource ForegroundBrush}" Padding="2, 0">
                        <ScrollViewer Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Height" Value="25" />
        <Setter Property="Width" Value="200" />
    </Style>

    <Style x:Key="ToolBarButton" TargetType="{x:Type Button}" BasedOn="{StaticResource baseControlStyle}">
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}" >
                    <Border Name="border" Background="{DynamicResource BackgroundBrush}" Margin="3"
                            BorderThickness="1" BorderBrush="{DynamicResource ForegroundBrush}" Padding="1" Width="60" >
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderThickness" Value="2" />
                            <Setter TargetName="border" Property="BorderBrush" Value="CornflowerBlue" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource BackgroundBrush}" />
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ForegroundBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource BackgroundBrush}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource LightForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToolBarComboBoxItem" TargetType="ComboBoxItem" BasedOn="{StaticResource baseControlStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Bd" Padding="3">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToolBarComboBoxTextBoxStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource baseControlStyle}">
        <Setter Property="MinWidth" Value="150" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border Background="{DynamicResource BackgroundBrush}"
                                BorderThickness="1,1,0,1" BorderBrush="{DynamicResource ForegroundBrush}" Padding="5, 2">
                            <ScrollViewer x:Name="PART_ContentHost" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
    </Style>

    <Style x:Key="ToolBarComboBoxButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Name="border" Background="{DynamicResource ForegroundBrushLight}" 
                            BorderThickness="0,1,1,1" BorderBrush="{DynamicResource ForegroundBrush}" Padding="2">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ForegroundBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource BackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Background" Value="{DynamicResource BackgroundBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToolBarComboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="comboBoxGrid" Margin="3" Height="23">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition MaxWidth="18"/>
                        </Grid.ColumnDefinitions>
                        <TextBox Grid.Column="0" Name="PART_EditableTextBox"
                                 Style="{StaticResource ToolBarComboBoxTextBoxStyle}"/>
                        <ToggleButton Grid.Column="1" Margin="0"
                                     Style="{StaticResource ToolBarComboBoxButtonStyle}"
                                     Focusable="False"
                                     IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                     ClickMode="Press">
                            <Path Grid.Column="1"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Data="M 0 0 L 4 4 L 8 0 Z"
                                  Fill="{StaticResource ForegroundBrush}" />
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite"
                                      Content="{TemplateBinding SelectionBoxItem}"
                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"                                      
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Left"
                                      TextBlock.FontFamily="Segoe UI"
                                      TextBlock.FontSize="12"
                                      TextBlock.Foreground="{StaticResource ForegroundBrush}"
                                      Margin="5,0,0,0"/>
                        <Popup Name="Popup"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True" 
                               Focusable="False"
                               PopupAnimation="Slide">
                            <Grid Name="DropDown"
                                  SnapsToDevicePixels="True"                
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border 
                                    x:Name="DropDownBorder"
                                    BorderThickness="1"
                                    Background="{StaticResource ForegroundBrushLight}"
                                    BorderBrush="{StaticResource ForegroundBrush}"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SelectedItem" Value="{x:Null}">
                            <Setter Property="SelectedIndex" Value="0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToolBarLabel" TargetType="{x:Type Label}" BasedOn="{StaticResource baseControlStyle}">
        <Setter Property="Margin" Value="20, 0, 5, 2" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border
                BorderThickness="{TemplateBinding BorderThickness}"
                BorderBrush="{TemplateBinding BorderBrush}"
                Padding="{TemplateBinding Padding}"
                SnapsToDevicePixels="true">
                        <Grid>
                            <Rectangle Fill="{TemplateBinding Background}">
                                <Rectangle.OpacityMask>
                                    <SolidColorBrush Opacity="0" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                            <ContentPresenter
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="titleLabel" TargetType="{x:Type Label}" BasedOn="{StaticResource baseControlStyle}">
        <Setter Property="Margin" Value="10, 5, 10, 5" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border
                BorderThickness="{TemplateBinding BorderThickness}"
                BorderBrush="{TemplateBinding BorderBrush}"
                Padding="{TemplateBinding Padding}"
                SnapsToDevicePixels="true">
                        <Grid>
                            <Rectangle Fill="{TemplateBinding Background}">
                                <Rectangle.OpacityMask>
                                    <SolidColorBrush Opacity="0" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                            <ContentPresenter
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxItem" TargetType="ComboBoxItem" BasedOn="{StaticResource baseControlStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Bd" Padding="3">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxTextBoxStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource baseControlStyle}">
        <Setter Property="MinWidth" Value="150" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border Background="{DynamicResource BackgroundBrush}"
                                BorderThickness="1,1,0,1" BorderBrush="{DynamicResource ForegroundBrush}" Padding="5, 2">
                            <ScrollViewer x:Name="PART_ContentHost" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
    </Style>

    <Style x:Key="ComboBoxButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Name="border" Background="{DynamicResource ForegroundBrushLight}" 
                            BorderThickness="0,1,1,1" BorderBrush="{DynamicResource ForegroundBrush}" Padding="2">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ForegroundBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource BackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Background" Value="{DynamicResource BackgroundBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="comboBoxGrid" Margin="3" Height="23">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition MaxWidth="18"/>
                        </Grid.ColumnDefinitions>
                        <TextBox Grid.Column="0" Name="PART_EditableTextBox"
                                 Style="{StaticResource ComboBoxTextBoxStyle}"/>
                        <ToggleButton Grid.Column="1" Margin="0"
                                     Style="{StaticResource ComboBoxButtonStyle}"
                                     Focusable="False"
                                     IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                     ClickMode="Press">
                            <Path Grid.Column="1"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Data="M 0 0 L 4 4 L 8 0 Z"
                                  Fill="{StaticResource ForegroundBrush}" />
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite"
                                      Content="{TemplateBinding SelectionBoxItem}"
                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"                                      
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Left"
                                      TextBlock.FontFamily="Segoe UI"
                                      TextBlock.FontSize="12"
                                      TextBlock.Foreground="{StaticResource ForegroundBrush}"
                                      Margin="5,0,0,0"/>
                        <Popup Name="Popup"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True" 
                               Focusable="False"
                               PopupAnimation="Slide">
                            <Grid Name="DropDown"
                                  SnapsToDevicePixels="True"                
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border 
                                    x:Name="DropDownBorder"
                                    BorderThickness="1"
                                    Background="{StaticResource BackgroundBrush}"
                                    BorderBrush="{StaticResource ForegroundBrush}"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SelectedItem" Value="{x:Null}">
                            <Setter Property="SelectedIndex" Value="0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="valueLabel" TargetType="{x:Type Label}" BasedOn="{StaticResource baseControlStyle}">
        <Setter Property="Margin" Value="10, 5, 10, 5" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border
                BorderThickness="{TemplateBinding BorderThickness}"
                BorderBrush="{TemplateBinding BorderBrush}"
                Padding="{TemplateBinding Padding}"
                SnapsToDevicePixels="true">
                        <Grid>
                            <Rectangle Fill="{TemplateBinding Background}">
                                <Rectangle.OpacityMask>
                                    <SolidColorBrush Opacity="0" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                            <ContentPresenter
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SectionLabel" TargetType="{x:Type Label}" BasedOn="{StaticResource baseControlStyle}">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="10, 0" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border
                BorderThickness="{TemplateBinding BorderThickness}"
                BorderBrush="{DynamicResource ForegroundBrushLight}"
                Padding="{TemplateBinding Padding}"
                SnapsToDevicePixels="true">
                        <Grid>
                            <Rectangle Fill="{TemplateBinding Background}">
                                <Rectangle.OpacityMask>
                                    <SolidColorBrush Opacity="0" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                            <ContentPresenter
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="sectionBorder" TargetType="{x:Type Border}" >
        <Setter Property="BorderBrush" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Background" Value="{DynamicResource ForegroundBrushLight}" />
        <Setter Property="CornerRadius" Value="10" />
    </Style>

    <!--  Scrollbar Buttons  -->
    <Style x:Key="ScrollButtons" TargetType="{x:Type RepeatButton}">
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Name="Border" Background="Transparent">
                        <ContentPresenter Name="ContentPresenter"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Scrollbar Thumbs  -->
    <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
        <Setter Property="Background" Value="{StaticResource LightSliderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Name="Grid">
                        <Rectangle Width="Auto"
                                   Height="Auto"
                                   HorizontalAlignment="Stretch"
                                   VerticalAlignment="Stretch"
                                   Fill="Transparent" />
                        <Rectangle Name="Rectangle1"
                                   Width="7"
                                   Height="Auto"
                                   HorizontalAlignment="Stretch"
                                   VerticalAlignment="Stretch"
                                   Fill="{TemplateBinding Background}"
                                   RadiusX="4"
                                   RadiusY="4" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="Horizontal">
                            <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                            <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Scrollbar  -->
    <Style x:Key="MyScrollBar" TargetType="{x:Type ScrollBar}">
        <Setter Property="Background" Value="{StaticResource SliderBrush}" />
        <Setter Property="Width" Value="12" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="GridRoot"
                          Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidth}}"
                          Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="18" />
                            <RowDefinition Height="0.00001*" />
                            <RowDefinition MaxHeight="18" />
                        </Grid.RowDefinitions>
                        <RepeatButton x:Name="DecreaseRepeat"
                                      Command="ScrollBar.LineUpCommand"
                                      Foreground="{StaticResource LightSliderBrush}"
                                      Style="{DynamicResource ScrollButtons}">
                            <Path x:Name="DecreaseArrow"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Data="F1 M 3.5,0L 0,7L 7,7L 3.5,0 Z "
                                  Fill="{StaticResource LightSliderBrush}" />
                        </RepeatButton>
                        <Track x:Name="PART_Track"
                               Grid.Row="1"
                               Focusable="false"
                               IsDirectionReversed="true">
                            <Track.Thumb>
                                <Thumb x:Name="Thumb"
                                       Background="{DynamicResource ButtonDefaultBrush}"
                                       Style="{DynamicResource ScrollThumbs}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="PageUp"
                                              Command="ScrollBar.PageDownCommand"
                                              Focusable="false"
                                              Opacity="0" />
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="PageDown"
                                              Command="ScrollBar.PageUpCommand"
                                              Focusable="false"
                                              Opacity="0" />
                            </Track.DecreaseRepeatButton>
                        </Track>
                        <RepeatButton x:Name="IncreaseRepeat"
                                      Grid.Row="2"
                                      Command="ScrollBar.LineDownCommand"
                                      Foreground="{StaticResource LightSliderBrush}"
                                      Style="{StaticResource ScrollButtons}">
                            <Path x:Name="IncreaseArrow"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Data="F1 M 3.5,7L 7,0L 0,0L 3.5,7 Z "
                                  Fill="{StaticResource LightSliderBrush}" />
                        </RepeatButton>
                    </Grid>

                    <ControlTemplate.Triggers>

                        <Trigger SourceName="IncreaseRepeat" Property="IsMouseOver" Value="true">
                            <Setter TargetName="IncreaseArrow" Property="Fill" Value="{StaticResource LighterSliderBrush}" />
                        </Trigger>
                        <Trigger SourceName="DecreaseRepeat" Property="IsMouseOver" Value="true">
                            <Setter TargetName="DecreaseArrow" Property="Fill" Value="{StaticResource LighterSliderBrush}" />
                        </Trigger>

                        <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                            <Setter TargetName="Thumb" Property="Background" Value="{StaticResource LighterSliderBrush}" />
                        </Trigger>
                        <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                            <Setter TargetName="Thumb" Property="Background" Value="{StaticResource LighterSliderBrush}" />
                        </Trigger>

                        <Trigger SourceName="IncreaseRepeat" Property="IsPressed" Value="true">
                            <Setter TargetName="IncreaseArrow" Property="Fill" Value="{StaticResource LighterSliderBrush}" />
                        </Trigger>
                        <Trigger SourceName="DecreaseRepeat" Property="IsPressed" Value="true">
                            <Setter TargetName="DecreaseArrow" Property="Fill" Value="{StaticResource LighterSliderBrush}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="IncreaseArrow" Property="Fill" Value="{DynamicResource LayerChild1Brush}" />
                            <Setter TargetName="DecreaseArrow" Property="Fill" Value="{DynamicResource LayerChild1Brush}" />
                            <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="GridRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Width" Value="Auto" />
                            <Setter Property="Height" Value="12" />
                            <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                            <Setter TargetName="DecreaseRepeat" Property="Command" Value="ScrollBar.LineLeftCommand" />
                            <Setter TargetName="IncreaseRepeat" Property="Command" Value="ScrollBar.LineRightCommand" />
                            <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                            <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Margin" Value="0,10,0,10" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Background" Value="Black" />
        <Setter Property="FontWeight" Value="Bold" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Border x:Name="columnHeaderBorder"
                                BorderThickness="0"
                                BorderBrush="{StaticResource ForegroundBrush}"
                                CornerRadius="5"
                                Padding="5"
                                Background="Transparent">
                            <TextBlock x:Name="headerTextBlock"  >
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                  Margin="0">
                                </ContentPresenter>
                            </TextBlock>

                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="headerTextBlock" Property="TextBlock.TextDecorations" Value="Underline" />
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="headerTextBlock" Property="TextBlock.TextDecorations" Value="Underline" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="#FFFFFF"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="true">
                            <Setter Property="Background" Value="#000000"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridRowHeaderStyle" TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                    <Grid>
                        <Microsoft_Windows_Themes:DataGridHeaderBorder Background="{TemplateBinding Background}"
                                                                       BorderBrush="{TemplateBinding BorderBrush}"
                                                                       BorderThickness="{TemplateBinding BorderThickness}"
                                                                       IsHovered="{TemplateBinding IsMouseOver}"
                                                                       IsPressed="{TemplateBinding IsPressed}"
                                                                       IsSelected="{TemplateBinding IsRowSelected}"
                                                                       Orientation="Horizontal"
                                                                       Padding="{TemplateBinding Padding}"
                                                                       SeparatorBrush="{TemplateBinding SeparatorBrush}"
                                                                       SeparatorVisibility="{TemplateBinding SeparatorVisibility}">
                            <Border x:Name="rowHeaderBorder"
                                  Width="10"
                                  BorderThickness="0">
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="0.5,1"
                                   StartPoint="0.5,0">
                                        <GradientStop Color="LightBlue" Offset="0" />
                                        <GradientStop Color="White" Offset="1" />
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1"
                                   StartPoint="0.5,0">
                                        <GradientStop Color="LightBlue" Offset="0" />
                                        <GradientStop Color="White" Offset="1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                                <StackPanel Orientation="Horizontal">
                                    <ContentPresenter VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    <Control SnapsToDevicePixels="false" Template="{Binding ValidationErrorTemplate, 
                                        RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" Visibility="{Binding (Validation.HasError), 
                                        Converter={StaticResource boolToVisibilityConverter}, 
                                        RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" />
                                </StackPanel>
                            </Border>
                        </Microsoft_Windows_Themes:DataGridHeaderBorder>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridRowStyle" TargetType="{x:Type DataGridRow}">
        <Setter Property="Background" Value="LightBlue" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Setter Property="Margin" Value="20,0,20,0" />
        <Setter Property="ValidationErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock Margin="2,0,0,0" x:Name="TextBlock1"
                               VerticalAlignment="Center" HorizontalAlignment="Center"
                               TextAlignment="Center">
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Border x:Name="DGR_Border"
                            BorderBrush="{DynamicResource ForegroundBrushLight}"
                            BorderThickness="1"
                            Margin="3" 
                            SnapsToDevicePixels="True"
                            CornerRadius="5">
                        <SelectiveScrollingGrid>
                            <SelectiveScrollingGrid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </SelectiveScrollingGrid.ColumnDefinitions>
                            <SelectiveScrollingGrid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </SelectiveScrollingGrid.RowDefinitions>
                            <DataGridCellsPresenter Grid.Column="1"
                                                    ItemsPanel="{TemplateBinding ItemsPanel}"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <DataGridDetailsPresenter Grid.Row="1"
                                                      Grid.Column="1"
                                                      SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen,
                                                                    ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical},
                                                                    Converter={x:Static DataGrid.RowDetailsScrollingConverter},
                                                                    RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                      Visibility="{TemplateBinding DetailsVisibility}" />
                            <DataGridRowHeader Grid.RowSpan="2"
                                               SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                               Visibility="{Binding HeadersVisibility,
                                                                    ConverterParameter={x:Static DataGridHeadersVisibility.Row},
                                                                    Converter={x:Static DataGrid.HeadersVisibilityConverter},
                                                                    RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                        </SelectiveScrollingGrid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                            <Setter Property="Background" TargetName="DGR_Border"  Value="#A5FFFFFF"></Setter>
                        </Trigger>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                            <Setter Property="Background" TargetName="DGR_Border"  Value="#c5d7e5"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#000000"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="DGR_Border" Value="{DynamicResource ForegroundBrush}"/>
                            <Setter Property="BorderThickness" TargetName="DGR_Border" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridCellStyle" TargetType="{x:Type DataGridCell}">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border x:Name="border"
                        BorderBrush="Transparent"
                        BorderThickness="0"
                        Background="Transparent"
                        SnapsToDevicePixels="True"
                        Margin="5" >
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridNoHeaderStyle" TargetType="{x:Type DataGrid}">
        <Setter Property="Background" Value="{StaticResource DataGridOpacityBackground}" />
        <Setter Property="AlternatingRowBackground" Value="Transparent" />
        <Setter Property="RowStyle" Value="{StaticResource DataGridRowStyle}" />
        <Setter Property="CellStyle" Value="{StaticResource DataGridCellStyle}" />
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource DataGridColumnHeaderStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{StaticResource ForegroundBrush}"
                            BorderThickness="1"
                            CornerRadius="10"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">
                        <DockPanel LastChildFill="True">
                            <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false" DockPanel.Dock="Top" >
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <Button Width="{Binding CellsPanelHorizontalOffset,
                                                                RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                Command="{x:Static DataGrid.SelectAllCommand}"
                                                Focusable="false"
                                                Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle,
                                                                                              TypeInTargetAssembly={x:Type DataGrid}}}"
                                                Visibility="Hidden" />
                                            <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
                                                                        Grid.Column="1"
                                                                        Visibility="{Binding HeadersVisibility,
                                                                                             ConverterParameter={x:Static DataGridHeadersVisibility.Column},
                                                                                             Converter={x:Static DataGrid.HeadersVisibilityConverter},
                                                                                             RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                                Grid.Row="1"
                                                                Grid.ColumnSpan="2"
                                                                CanContentScroll="{TemplateBinding CanContentScroll}" />
                                            <ScrollBar x:Name="PART_VerticalScrollBar"
                                                   Grid.Row="1"
                                                   Grid.Column="2"
                                                   Maximum="{TemplateBinding ScrollableHeight}"
                                                   Orientation="Vertical"
                                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                   Value="{Binding VerticalOffset,
                                                                   Mode=OneWay,
                                                                   RelativeSource={RelativeSource TemplatedParent}}"
                                                   Style="{DynamicResource MyScrollBar}">
                                            </ScrollBar>
                                            <Grid Grid.Row="2" Grid.Column="1">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <ScrollBar x:Name="PART_HorizontalScrollBar"
                                                       Grid.Column="1"
                                                       Maximum="{TemplateBinding ScrollableWidth}"
                                                       Orientation="Horizontal"
                                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                       Value="{Binding HorizontalOffset,
                                                                       Mode=OneWay,
                                                                       RelativeSource={RelativeSource TemplatedParent}}"
                                                       Style="{DynamicResource MyScrollBar}" />
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>
                        </DockPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridStyle" TargetType="{x:Type DataGrid}">
        <Setter Property="Background" Value="{StaticResource DataGridOpacityBackground}" />
        <Setter Property="AlternatingRowBackground" Value="Transparent" />
        <Setter Property="RowStyle" Value="{StaticResource DataGridRowStyle}" />
        <Setter Property="CellStyle" Value="{StaticResource DataGridCellStyle}" />
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource DataGridColumnHeaderStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border Style="{DynamicResource SectionBorder}"                            
                            SnapsToDevicePixels="True">
                        <DockPanel LastChildFill="True">
                            <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false" DockPanel.Dock="Top" >
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <Button Width="{Binding CellsPanelHorizontalOffset,
                                                                RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                Command="{x:Static DataGrid.SelectAllCommand}"
                                                Focusable="false"
                                                Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle,
                                                                                              TypeInTargetAssembly={x:Type DataGrid}}}"
                                                Visibility="Hidden" />
                                            <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
                                                                        Grid.Column="1"
                                                                        Visibility="{Binding HeadersVisibility,
                                                                                             ConverterParameter={x:Static DataGridHeadersVisibility.Column},
                                                                                             Converter={x:Static DataGrid.HeadersVisibilityConverter},
                                                                                             RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                                Grid.Row="1"
                                                                Grid.ColumnSpan="2"
                                                                CanContentScroll="{TemplateBinding CanContentScroll}" />
                                            <ScrollBar x:Name="PART_VerticalScrollBar"
                                                   Grid.Row="1"
                                                   Grid.Column="2"
                                                   Maximum="{TemplateBinding ScrollableHeight}"
                                                   Orientation="Vertical"
                                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                   Value="{Binding VerticalOffset,
                                                                   Mode=OneWay,
                                                                   RelativeSource={RelativeSource TemplatedParent}}"
                                                   Style="{DynamicResource MyScrollBar}">
                                            </ScrollBar>
                                            <Grid Grid.Row="2" Grid.Column="1">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <ScrollBar x:Name="PART_HorizontalScrollBar"
                                                       Grid.Column="1"
                                                       Maximum="{TemplateBinding ScrollableWidth}"
                                                       Orientation="Horizontal"
                                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                       Value="{Binding HorizontalOffset,
                                                                       Mode=OneWay,
                                                                       RelativeSource={RelativeSource TemplatedParent}}"
                                                       Style="{DynamicResource MyScrollBar}" />
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>
                        </DockPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SectionLine" TargetType="{x:Type Line}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="Stroke" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="StrokeDashArray" Value="2 2" />
        <Setter Property="StrokeThickness" Value="1" />
    </Style>

    <Style x:Key="ScrollViewer" TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle"
          Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition  />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border Grid.Column="0" BorderThickness="0">
                            <ScrollContentPresenter />
                        </Border>
                        <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="1"
                     Value="{TemplateBinding VerticalOffset}"
                     Maximum="{TemplateBinding ScrollableHeight}"
                     ViewportSize="{TemplateBinding ViewportHeight}"
                     Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                     Style="{DynamicResource MyScrollBar}"              />
                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                     Orientation="Horizontal"
                     Grid.Row="1"
                     Value="{TemplateBinding HorizontalOffset}"
                     Maximum="{TemplateBinding ScrollableWidth}"
                     ViewportSize="{TemplateBinding ViewportWidth}"
                     Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                     Style="{DynamicResource MyScrollBar}"  />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabControlItem" TargetType="{x:Type TabControl}" BasedOn="{StaticResource baseControlStyle}">
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <DockPanel LastChildFill="True" Margin="0">
                        <StackPanel DockPanel.Dock="Top"  Margin="15,2,5,-2" Panel.ZIndex="3" Orientation="Horizontal" HorizontalAlignment="Stretch" Background="{StaticResource ForegroundBrush}">
                            <TabPanel IsItemsHost="True"/>
                        </StackPanel>
                        <Border BorderBrush="{StaticResource ForegroundBrushLight}"
                                Panel.ZIndex="4"
                                BorderThickness="0" 
                                Margin="5,0,5,0" 
                                Background="{DynamicResource ViewBackground}" 
                                SnapsToDevicePixels="True"
                                DockPanel.Dock="Top">
                            <ContentPresenter ContentSource="SelectedContent" HorizontalAlignment="Stretch"/>
                        </Border>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabItem" TargetType="{x:Type TabItem}" BasedOn="{StaticResource baseControlStyle}">
        <Setter Property="Header" Value="{Binding DataContext.Title}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border Name="Border" Padding="5,2" Background="{DynamicResource BackgroundBrush}" >
                        <StackPanel Orientation="Horizontal">
                            <ContentPresenter ContentSource="Header" VerticalAlignment="Center" />
                            <Button Style="{DynamicResource TabItemButton}">X</Button>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" TargetName="Border" Value="{StaticResource ForegroundBrushLight}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="0.85" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabItemButton" TargetType="{x:Type Button}" BasedOn="{StaticResource baseControlStyle}">
        <Setter Property="Command" Value="{Binding DataContext.CloseTabCommand}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}" >
                    <Border Name="border" Margin="3, 1, 1, 1"
                            BorderThickness="0" BorderBrush="{DynamicResource ForegroundBrush}" Padding="0" Width="20" Height="20" >
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Cursor="None" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource BackgroundBrush}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="CornflowerBlue" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource BackgroundBrush}" />
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ForegroundBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource BackgroundBrush}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource ForegroundBrushLight}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
